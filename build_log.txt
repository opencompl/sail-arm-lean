installing leantar 0.1.15
Attempting to download 6527 file(s)
Decompressing 6527 file(s)
Unpacked in 13757 ms
Completed successfully!
✔ [1337/1375] Built Armv9.Sail.IntRange
✔ [1338/1375] Built Armv9.Sail.BitVec
✔ [1339/1375] Built Armv9.Sail.Sail
✔ [1340/1375] Built Armv9.Defs
✔ [1341/1375] Built Armv9.Specialization
✔ [1342/1375] Built Armv9.ArmExtras
✔ [1343/1375] Built Armv9.Real
✔ [1344/1375] Built Armv9.Flow
✔ [1345/1375] Built Armv9.Arith
✔ [1346/1375] Built Armv9.Trace
✔ [1347/1375] Built Armv9.Vector
✔ [1348/1375] Built Armv9.String
✔ [1349/1375] Built Armv9.ReverseEndianness
✔ [1350/1375] Built Armv9.Option
✔ [1351/1375] Built Armv9.MonoRewrites
✔ [1352/1375] Built Armv9.Result
✔ [1353/1375] Built Armv9.Common
✔ [1354/1375] Built Armv9.ReadWrite
✔ [1355/1375] Built Armv9.Prelude
✔ [1356/1375] Built Armv9.Builtins
✖ [1357/1375] Building Armv9.V8Base
trace: .> LEAN_PATH=/home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/packages/Cli/.lake/build/lib/lean:/home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/packages/batteries/.lake/build/lib/lean:/home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/packages/Qq/.lake/build/lib/lean:/home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/packages/aesop/.lake/build/lib/lean:/home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/packages/proofwidgets/.lake/build/lib/lean:/home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/packages/importGraph/.lake/build/lib/lean:/home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/packages/LeanSearchClient/.lake/build/lib/lean:/home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/packages/plausible/.lake/build/lib/lean:/home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/packages/mathlib/.lake/build/lib/lean:/home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/build/lib/lean /home/runner/.elan/toolchains/leanprover--lean4-nightly---nightly-2025-04-07/bin/lean --tstack=400000 -Dweak.linter.style.nameCheck=false /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean -R /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9 -o /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/build/lib/lean/Armv9/V8Base.olean -i /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/build/lib/lean/Armv9/V8Base.ilean -c /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/.lake/build/ir/Armv9/V8Base.c --json
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:60776:102: unexpected identifier; expected 'do'
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:60768:22: don't know how to synthesize placeholder
context:
k_N : ℕ
operand : BitVec k_N
fpcr_in : BitVec 64
estimate : ℤ
fptype✝ : FPType
sign✝ : BitVec 1
value_name✝ : real
x✝¹ : PUnit.{1}
fpcr✝ : FPCRType := fpcr_in
altfp : Bool
fpexc : Bool := !altfp
fpcr : BitVec 64 :=
  bif altfp then
    let split_vec := 3;
    let fpcr := BitVec.updateSubrange fpcr✝ 0 0 (Sail.BitVec.extractLsb split_vec 1 1);
    BitVec.updateSubrange fpcr 24 24 (Sail.BitVec.extractLsb split_vec 0 0)
  else fpcr✝
__discr✝¹ : FPType × BitVec 1 × real
tup__0 : FPType
tup__1 : BitVec 1
tup__2 : real
fptype : FPType := tup__0
sign : BitVec 1 := tup__1
value_name : real := tup__2
x✝ : PUnit.{1}
result : BitVec (BitVec.length operand)
fraction✝¹ : BitVec 52
exp✝¹ exp✝ : ℤ
fraction✝ : BitVec 52
exp :
  ?m.13522158 operand fpcr_in estimate fptype✝ sign✝ value_name✝ x✝¹ altfp __discr✝¹ tup__0 tup__1 tup__2 x✝ result
    fraction✝¹ exp✝¹ exp✝ fraction✝
fraction :
  ?m.13522159 operand fpcr_in estimate fptype✝ sign✝ value_name✝ x✝¹ altfp __discr✝¹ tup__0 tup__1 tup__2 x✝ result
    fraction✝¹ exp✝¹ exp✝ fraction✝
⊢ Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:60768:22: don't know how to synthesize placeholder
context:
k_N : ℕ
operand : BitVec k_N
fpcr_in : BitVec 64
estimate : ℤ
fptype✝ : FPType
sign✝ : BitVec 1
value_name✝ : real
x✝¹ : PUnit.{1}
fpcr✝ : FPCRType := fpcr_in
altfp : Bool
fpexc : Bool := !altfp
fpcr : BitVec 64 :=
  bif altfp then
    let split_vec := 3;
    let fpcr := BitVec.updateSubrange fpcr✝ 0 0 (Sail.BitVec.extractLsb split_vec 1 1);
    BitVec.updateSubrange fpcr 24 24 (Sail.BitVec.extractLsb split_vec 0 0)
  else fpcr✝
__discr✝¹ : FPType × BitVec 1 × real
tup__0 : FPType
tup__1 : BitVec 1
tup__2 : real
fptype : FPType := tup__0
sign : BitVec 1 := tup__1
value_name : real := tup__2
x✝ : PUnit.{1}
result : BitVec (BitVec.length operand)
fraction✝¹ : BitVec 52
exp✝¹ exp✝ : ℤ
fraction✝ : BitVec 52
exp :
  ?m.13522158 operand fpcr_in estimate fptype✝ sign✝ value_name✝ x✝¹ altfp __discr✝¹ tup__0 tup__1 tup__2 x✝ result
    fraction✝¹ exp✝¹ exp✝ fraction✝
fraction :
  ?m.13522159 operand fpcr_in estimate fptype✝ sign✝ value_name✝ x✝¹ altfp __discr✝¹ tup__0 tup__1 tup__2 x✝ result
    fraction✝¹ exp✝¹ exp✝ fraction✝
⊢ Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:60771:23: don't know how to synthesize placeholder
context:
case m
k_N : ℕ
operand : BitVec k_N
fpcr_in : BitVec 64
estimate : ℤ
fptype✝ : FPType
sign✝ : BitVec 1
value_name✝ : real
x✝¹ : PUnit.{1}
fpcr✝ : FPCRType := fpcr_in
altfp : Bool
fpexc : Bool := !altfp
fpcr : BitVec 64 :=
  bif altfp then
    let split_vec := 3;
    let fpcr := BitVec.updateSubrange fpcr✝ 0 0 (Sail.BitVec.extractLsb split_vec 1 1);
    BitVec.updateSubrange fpcr 24 24 (Sail.BitVec.extractLsb split_vec 0 0)
  else fpcr✝
__discr✝ : FPType × BitVec 1 × real
tup__0 : FPType
tup__1 : BitVec 1
tup__2 : real
fptype : FPType := tup__0
sign : BitVec 1 := tup__1
value_name : real := tup__2
x✝ : PUnit.{1}
result : BitVec (BitVec.length operand)
fraction✝ : BitVec 52
exp✝ exp : ℤ
fraction : BitVec 52
⊢ Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:60768:43: don't know how to synthesize placeholder
context:
case m
k_N : ℕ
operand : BitVec k_N
fpcr_in : BitVec 64
estimate : ℤ
fptype✝ : FPType
sign✝ : BitVec 1
value_name✝ : real
x✝¹ : PUnit.{1}
fpcr✝ : FPCRType := fpcr_in
altfp : Bool
fpexc : Bool := !altfp
fpcr : BitVec 64 :=
  bif altfp then
    let split_vec := 3;
    let fpcr := BitVec.updateSubrange fpcr✝ 0 0 (Sail.BitVec.extractLsb split_vec 1 1);
    BitVec.updateSubrange fpcr 24 24 (Sail.BitVec.extractLsb split_vec 0 0)
  else fpcr✝
__discr✝ : FPType × BitVec 1 × real
tup__0 : FPType
tup__1 : BitVec 1
tup__2 : real
fptype : FPType := tup__0
sign : BitVec 1 := tup__1
value_name : real := tup__2
x✝ : PUnit.{1}
result : BitVec (BitVec.length operand)
fraction✝ : BitVec 52
exp✝ exp : ℤ
fraction : BitVec 52
⊢ Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:60768:18: don't know how to synthesize placeholder for argument 'α'
context:
k_N : ℕ
operand : BitVec k_N
fpcr_in : BitVec 64
estimate : ℤ
fptype✝ : FPType
sign✝ : BitVec 1
value_name✝ : real
x✝¹ : PUnit.{1}
fpcr✝ : FPCRType := fpcr_in
altfp : Bool
fpexc : Bool := !altfp
fpcr : BitVec 64 :=
  bif altfp then
    let split_vec := 3;
    let fpcr := BitVec.updateSubrange fpcr✝ 0 0 (Sail.BitVec.extractLsb split_vec 1 1);
    BitVec.updateSubrange fpcr 24 24 (Sail.BitVec.extractLsb split_vec 0 0)
  else fpcr✝
__discr✝ : FPType × BitVec 1 × real
tup__0 : FPType
tup__1 : BitVec 1
tup__2 : real
fptype : FPType := tup__0
sign : BitVec 1 := tup__1
value_name : real := tup__2
x✝ : PUnit.{1}
result : BitVec (BitVec.length operand)
fraction✝ : BitVec 52
exp✝ exp : ℤ
fraction : BitVec 52
⊢ Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:63553:24: unknown identifier 'GPTWalk'
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:67421:36: unexpected identifier; expected 'do'
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:74457:32: unknown identifier 'AArch64_S2Walk'
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:74466:34: unknown identifier 'AArch64_S2Walk'
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:74574:20: application type mismatch
  @ite ?m.18252790 fun x => ?m.18252783
argument
  fun x => ?m.18252783
has type
  (x : ?m.18252779) → ?m.18252784 x : Sort (imax ?u.18252778 ?u.18252781)
but is expected to have type
  Prop : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:74576:20: type mismatch
  loop_vars
has type
  AddressDescriptor × BitVec 128 × FaultRecord × BitVec 128 × BitVec 128 × Bool × TTWState : Type
but is expected to have type
  SailME ?m.18247591 PUnit.{1} : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:74732:12: failed to synthesize
  MonadExcept (FaultRecord × AddressDescriptor × TTWState × BitVec (((fun x y => x - y) (↑N) 1).toNat - 0 + 1))
    (SailME (FaultRecord × AddressDescriptor × TTWState × BitVec N))

Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:74989:24: application type mismatch
  @ite ?m.18314853 fun x => ?m.18314846
argument
  fun x => ?m.18314846
has type
  (x : ?m.18314842) → ?m.18314847 x : Sort (imax ?u.18314841 ?u.18314844)
but is expected to have type
  Prop : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:74991:24: type mismatch
  loop_vars_1
has type
  Bool ×
    FullAddress × BitVec N × DescriptorType × FaultRecord × BitVec N × Bool × FaultRecord × BitVec 2 × TTWState : Type
but is expected to have type
  SailME ?m.18308107 PUnit.{1} : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:75001:12: application type mismatch
  @ite ?m.18318742 fun x => ?m.18318735
argument
  fun x => ?m.18318735
has type
  (x : ?m.18318731) → ?m.18318736 x : Sort (imax ?u.18318730 ?u.18318733)
but is expected to have type
  Prop : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:75003:12: type mismatch
  loop_vars
has type
  Bool ×
    FullAddress × BitVec N × DescriptorType × FaultRecord × Bool × Bool × BitVec 2 × AddressDescriptor × TTWState : Type
but is expected to have type
  SailME ?m.18304474 PUnit.{1} : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:75363:28: application type mismatch
  @ite ?m.18343612 fun x => ?m.18343605
argument
  fun x => ?m.18343605
has type
  (x : ?m.18343601) → ?m.18343606 x : Sort (imax ?u.18343600 ?u.18343603)
but is expected to have type
  Prop : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:75365:28: type mismatch
  loop_vars
has type
  AccessDescriptor ×
    AddressDescriptor × BitVec 128 × FaultRecord × BitVec 128 × BitVec 128 × Bool × Bool × TTWState : Type
but is expected to have type
  SailME ?m.18337127 PUnit.{1} : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:79012:9: failed to prove termination, possible solutions:
  - Use `have`-expressions to prove the remaining goals
  - Use `termination_by` to specify a different well-founded relation
  - Use `decreasing_by` to specify your own tactic for discharging this kind of goal
op : ReduceOp
esize : ℕ
altfp : Bool
k_N : ℕ
input : BitVec k_N
h✝ : ¬(BitVec.length input == esize) = true
half : ℤ := (↑(BitVec.length input)).ediv 2
⊢ (BitVec.length
        (Sail.BitVec.extractLsb input (↑(BitVec.length input) - 1).toNat
          ((↑(BitVec.length input)).ediv 2).toNat)).toNat <
    (BitVec.length input).toNat
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:90053:2: maximum recursion depth has been reached
use `set_option maxRecDepth <num>` to increase limit
use `set_option diagnostics true` to get diagnostic information
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:92055:8: unknown identifier 'AArch64_AutoGen_ArchitectureReset'
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:100084:12: application type mismatch
  @ite ?m.48780772 fun x => ?m.48780765
argument
  fun x => ?m.48780765
has type
  (x : ?m.48780761) → ?m.48780766 x : Sort (imax ?u.48780760 ?u.48780763)
but is expected to have type
  Prop : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:100086:12: type mismatch
  loop_vars
has type
  BitVec 64 × DescriptorType × FaultRecord × ℤ × ℤ × AddressDescriptor × TTWState : Type
but is expected to have type
  SailME ?m.48776773 PUnit.{1} : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:100521:12: application type mismatch
  @ite ?m.48883203 fun x => ?m.48883196
argument
  fun x => ?m.48883196
has type
  (x : ?m.48883192) → ?m.48883197 x : Sort (imax ?u.48883191 ?u.48883194)
but is expected to have type
  Prop : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:100523:12: type mismatch
  loop_vars
has type
  BitVec 64 ×
    DescriptorType × FaultRecord × ℤ × ℤ × Bool × FaultRecord × AddressDescriptor × AddressDescriptor × TTWState : Type
but is expected to have type
  SailME ?m.48877329 PUnit.{1} : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:101921:8: application type mismatch
  @ite ?m.49099075 fun x => ?m.49099068
argument
  fun x => ?m.49099068
has type
  (x : ?m.49099064) → ?m.49099069 x : Sort (imax ?u.49099063 ?u.49099066)
but is expected to have type
  Prop : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:101923:8: type mismatch
  loop_vars
has type
  BitVec 3 ×
    BitVec 1 ×
      BitVec 1 ×
        BitVec 32 ×
          BitVec 4 ×
            FaultRecord ×
              BitVec 1 ×
                BitVec 1 ×
                  BitVec 1 ×
                    BitVec 1 ×
                      Bool × FaultRecord × AddressDescriptor × BitVec 3 × AddressDescriptor × TTWState × BitVec 1 : Type
but is expected to have type
  SailME ?m.49090809 PUnit.{1} : Type
error: /home/runner/work/sail-arm-lean/sail-arm-lean/sail-arm/arm-v9.4-a/lean/armv9/Armv9/V8Base.lean:101922:15: invalid field notation, type is not of the form (C ...) where C is a constant
  walkstate
has type
  ?m.49114876
error: Lean exited with code 1
Some required builds logged failures:
- Armv9.V8Base
